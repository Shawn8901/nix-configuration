name: Package Updater

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch: {}

jobs:
  generate_matrix:
    runs-on: ubuntu-22.04
    outputs:
      packages: ${{ steps.gen_packages.outputs.packages }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          token: "${{ secrets.GH_TOKEN }}"
      - name: Install nix
        uses: ./.github/actions/setup-env
        with:
          setup-cachix: false
      - name: Generate packages.json
        run: |
          nix eval --json .#packages.x86_64-linux --apply 'builtins.mapAttrs(name: value: builtins.hasAttr "updateScript" value)' > packages.json
      - id: gen_packages
        run: |
          packages=$(jq -c 'map_values(select (.)) | keys' < packages.json)
          echo packages=$packages >> $GITHUB_OUTPUT

  update_packages:
    runs-on: ubuntu-22.04
    needs: [generate_matrix]
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        package: ${{fromJson(needs.generate_matrix.outputs.packages)}}
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          token: "${{ secrets.GH_TOKEN }}"
      - name: Install nix
        uses: ./.github/actions/setup-env
      - name: Update package
        run: nix-shell -p nix-update -- --format --build --test --commit --flake ${{ matrix.package }}
      - name: create PR
        uses: ./.github/actions/create-pr
        with:
          title: "Package update for ${{ matrix.package }} $(date -I)"
          body: "Automatic package update for ${{ matrix.package }} on $(date -I)"

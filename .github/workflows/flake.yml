name: Updater

on:
  schedule:
    - cron: "0 2 * * *"
  workflow_dispatch: {}

jobs:
  update_flake:
    runs-on: ubuntu-22.04
    outputs:
      packages: ${{ steps.gen_packages.outputs.packages }}
      machines: ${{ steps.gen_machines.outputs.machines }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          token: "${{ secrets.GH_TOKEN }}"
      - name: Install nix
        uses: ./.github/actions/setup-env
        with:
          setup-cachix: false
      - name: Update and check the flake
        run: nix flake update
      - name: Check Flake
        run: nix flake check
      - name: Generate flake.json
        run: nix flake show --allow-import-from-derivation --json > flake.json
      - id: gen_packages
        run: |
          packages=$(jq -c '.packages."x86_64-linux" | keys | map(select(. | contains ("machines/") | not))' < flake.json)
          echo packages=$packages >> $GITHUB_OUTPUT
      - id: gen_machines
        run: |
          machines=$(jq -c '.packages."x86_64-linux" | keys | map(select(. | contains ("machines/") and (contains ("pointalpha") | not) ))' < flake.json)
          echo machines=$machines >> $GITHUB_OUTPUT
      - name: Store flake.lock
        uses: actions/upload-artifact@v3
        with:
          name: flake_lock
          path: flake.lock

  build_packages:
    runs-on: ubuntu-22.04
    needs: [update_flake]
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        package: ${{fromJson(needs.update_flake.outputs.packages)}}
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          token: "${{ secrets.GH_TOKEN }}"
      - name: Install nix
        uses: ./.github/actions/setup-env
      - name: Restore flake.lock
        uses: actions/download-artifact@v3
        with:
          name: flake_lock
      - name: Build everything
        run: nix build .#${{ matrix.package }}

  build_machines:
    runs-on: ubuntu-22.04
    # Matrix has to be referenced here, otherwise we can not reference its output.
    needs: [update_flake, build_packages]
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        machine: ${{fromJson(needs.update_flake.outputs.machines)}}
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          token: "${{ secrets.GH_TOKEN }}"
      - name: Install nix
        uses: ./.github/actions/setup-env
      - name: Restore flake.lock
        uses: actions/download-artifact@v3
        with:
          name: flake_lock
      - name: Build everything
        run: nix build .#${{ matrix.machine }}

  push_update:
    runs-on: ubuntu-20.04
    permissions: write-all
    needs: [build_packages, build_machines]
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          token: "${{ secrets.GH_TOKEN }}"
      - name: Restore flake.lock
        uses: actions/download-artifact@v3
        with:
          name: flake_lock
      - name: create PR
        with:
          title: "Auto update $(date -I)"
          body: "Automatic flake update on $(date -I)"
